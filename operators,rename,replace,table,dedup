Operators:
AND:
eg: index=_internal sourcetype="splunkd_ui_access" | search file=splunkd AND status=200 | table file status | dedup file
OR:
eg. index=_internal sourcetype="splunkd_ui_access" | search file=splunkd OR file=shelper | table file | dedup file
NOT:
eg: index=_internal sourcetype="splunkd_ui_access" | search NOT file=shelper | table file | dedup file 


where:
.. | where field_name=<>
eg: index=_internal sourcetype="splunkd_ui_access" | where status>300 | table status  | dedup status
where command does not support wild card entry.

h.w. find out the difference between search and where command.

rename:
.. | rename <old_field_name> as <new_field_name>
eg:
index=_internal sourcetype="splunkd_ui_access" | where status>300 | table status  | dedup status | rename status as http_status

replace:
this is used to replace a field value.
.. | replace <old_value> with <new_value> in <field_name>
eg:
index=_internal sourcetype="splunkd_ui_access" | where status>300 | table status  | dedup status | replace 400 with 4000 in status

table:
.. | table <field_name1> <field_name2> <field_name3>

It supports wild card entry.

dedup:
used to remove the duplicate values.
eg:
index=_internal sourcetype="splunkd_ui_access" | dedup method | table  method

hw. We can use dedup before table or after table, which query is faster between them and why?
